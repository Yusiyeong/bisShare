<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">

	<insert id="insertOne">
		INSERT INTO MAIL(
				MAIL_NO
				, SEND
				, TITLE
				, CONTENT
		)
		VALUES (
			SEQ_MAIL_NO.NEXTVAL
			, ${send}
			, #{title}
			, #{content}
		)
	</insert>
	
	<insert id="insertRecInfo">
		INSERT INTO MAIL_RECEIVE(
			MAIL_REC_NO
			, MAIL_NO
			, RECEIVE
			<if test="reference != null">
				, REFERENCE
			</if>
		)
		VALUES (
			SEQ_MAIL_RECEIVE_NO.NEXTVAL
			, SEQ_MAIL_NO.CURRVAL
			, ${receive}
			<if test="reference != null">
				, ${reference}
			</if>
		)
	</insert>
	
	<insert id="insertAtt">
		INSERT INTO MAIL_ATT(
			MAIL_ATT_NO
			, MAIL_NO
			, ORIGIN_NAME
			, NAME
		)
		VALUES (
			SEQ_MAIL_ATT_NO.NEXTVAL
			, SEQ_MAIL_NO.CURRVAL
			, #{originName}
			, #{name}
		)
	</insert>
	
	<select id="selectAll" resultType="mv">
		SELECT 
		    MAIL_NO,
		    SEND,
		    LISTAGG(RECEIVE,',') WITHIN GROUP(ORDER BY RECEIVE) AS RECEIVE,
		    TITLE,
		    CONTENT,
		    ENROLL_DATE,
		    STAR,
		    LISTAGG(REFERENCE,',') WITHIN GROUP(ORDER BY REFERENCE) AS REFERENCE,
		    READ_YN
		FROM (
				SELECT 
					M.MAIL_NO
					, E.NICK SEND
					, EE.NICK RECEIVE
					, M.TITLE
					, M.CONTENT
					, M.ENROLL_DATE
					, R.STAR
					, R.REFERENCE
					, R.READ_YN
				FROM MAIL M
					INNER JOIN MAIL_RECEIVE R
					ON M.MAIL_NO = R.MAIL_NO
					INNER JOIN EMPLOYEE E
					ON M.SEND = E.EMP_NO
		            JOIN EMPLOYEE EE
		            ON R.RECEIVE = EE.EMP_NO
				WHERE R.STATUS=0
		        AND R.RECEIVE=${receive}
		        AND R.REFERENCE IS NULL
		        ) 
		GROUP BY MAIL_NO, TITLE, CONTENT, ENROLL_DATE, STAR, READ_YN, SEND 
	</select>
	
	<update id="updateStar">
		UPDATE MAIL_RECEIVE
		SET STAR = ${star}
		WHERE MAIL_NO=${mailNo}
		<if test="receive != null">
			AND RECEIVE=${receive}
			AND REFERENCE IS NULL
		</if>
		<if test="reference != null">
			AND REFERENCE=${reference}
		</if>
	</update>
	
	<select id="selectOne" resultType="mv">
		SELECT
		    M.MAIL_NO
		    , E.NICK SEND
		    , EE.NICK RECEIVE
		    , M.TITLE
		    , M.CONTENT
		FROM MAIL M
		JOIN EMPLOYEE E
			ON E.EMP_NO = M.SEND
        JOIN MAIL_RECEIVE R
			ON M.MAIL_NO = R.MAIL_NO
		JOIN EMPLOYEE EE
			ON EE.EMP_NO = R.RECEIVE
		WHERE R.STATUS = 0
			AND M.MAIL_NO = ${mailNo}
			AND R.RECEIVE = ${receive}
			AND R.REFERENCE IS NULL
	</select>
	
	<select id="selectRef" resultType="String">
		SELECT LISTAGG(E.NICK,',') WITHIN GROUP(ORDER BY R.REFERENCE) AS REFERENCE
		FROM MAIL_RECEIVE R
		JOIN EMPLOYEE E
			ON E.EMP_NO = R.REFERENCE
		JOIN MAIL M
			ON M.MAIL_NO = R.MAIL_NO
		WHERE R.MAIL_NO = ${mailNo}
			AND R.RECEIVE=${receive}
			AND R.STATUS=0
	</select>
	
	<select id="selectRefForRef" resultType="String">
		SELECT LISTAGG(E.NICK,',') WITHIN GROUP(ORDER BY R.REFERENCE) AS REFERENCE
		FROM MAIL_RECEIVE R
		JOIN EMPLOYEE E
			ON E.EMP_NO = R.REFERENCE
		JOIN MAIL M
			ON M.MAIL_NO = R.MAIL_NO
		WHERE R.MAIL_NO = ${mailNo}
			AND R.REFERENCE=${reference}
			AND R.STATUS=0
	</select>
	
	<select id="selectRefOne" resultType="mv">
		SELECT 
		    MAIL_NO,
		    SEND,
		    LISTAGG(RECEIVE,',') WITHIN GROUP(ORDER BY RECEIVE) AS RECEIVE,
		    TITLE,
		    CONTENT,
		    ENROLL_DATE,
		    STAR
		FROM (
				SELECT 
					M.MAIL_NO
					, E.NICK SEND
					, EE.NICK RECEIVE
					, M.TITLE
					, M.CONTENT
					, M.ENROLL_DATE
					, R.STAR
					, R.READ_YN
				FROM MAIL M
					INNER JOIN MAIL_RECEIVE R
					ON M.MAIL_NO = R.MAIL_NO
					INNER JOIN EMPLOYEE E
					ON M.SEND = E.EMP_NO
		            JOIN EMPLOYEE EE
		            ON R.RECEIVE = EE.EMP_NO
				WHERE R.STATUS=0
		        ) 
		WHERE MAIL_NO = 3
		group by MAIL_NO, TITLE, CONTENT, ENROLL_DATE, STAR, 
		READ_YN, SEND
	</select>
	
	<select id="selectStar" resultType="String">
		SELECT STAR
		FROM MAIL_RECEIVE
		WHERE MAIL_NO=${mailNo}
		<if test="receive != null">
			AND RECEIVE=${receive}
			AND REFERENCE IS NULL
		</if>
		<if test="reference != null">
			AND REFERENCE=${reference}
		</if>
	</select>
	
	<update id="updateReadYn">
		UPDATE MAIL_RECEIVE
		SET READ_YN = 'Y'
		WHERE MAIL_NO=${mailNo}
		<if test="receive != null">
			AND RECEIVE=${receive}
			AND REFERENCE IS NULL
		</if>
		<if test="reference != null">
			AND REFERENCE=${reference}
		</if>
	</update>
	
	<select id="selectStarList" resultType="mv">
		SELECT 
			M.MAIL_NO
			, E.NICK SEND
			, R.RECEIVE
			, M.TITLE
			, M.CONTENT
			, M.ENROLL_DATE
			, R.STAR
			, R.REFERENCE
			, R.READ_YN
		FROM MAIL M
			INNER JOIN MAIL_RECEIVE R
			ON M.MAIL_NO = R.MAIL_NO
			INNER JOIN EMPLOYEE E
			ON R.RECEIVE = E.EMP_NO
		WHERE R.STATUS=0
		AND R.RECEIVE=${empNo}
		OR R.REFERENCE=${empNo}
		AND R.STAR = 'Y'
	</select>
	
	<select id="selectNotReadCnt" resultType="String">
		SELECT 
			COUNT(READ_YN)
		FROM MAIL_RECEIVE
		WHERE STATUS=0
		AND RECEIVE=${receive}
        AND REFERENCE IS NULL
		AND READ_YN = 'N'
	</select>
	
	<select id="selectFilePath" resultType="com.bs.mail.vo.MailAttVo">
		SELECT 
			MAIL_ATT_NO
			, MAIL_NO
			, NAME
			, ORIGIN_NAME
			, ENROLL_DATE
		FROM MAIL_ATT
		WHERE MAIL_NO = ${mailNo}
	</select>
	
	<update id="updateCheckStatus">
		UPDATE MAIL_RECEIVE
		SET STATUS = ${status}
		WHERE MAIL_NO = ${mailNo}
		<if test="reference == null">
			AND RECEIVE = ${receive}
			AND REFERENCE IS NULL
		</if>
		<if test="reference != null">
			AND REFERENCE = ${reference}
		</if>
	</update>
	
	<select id="reference" resultType="mv">
		SELECT 
		    MAIL_NO,
		    SEND,
		    LISTAGG(RECEIVE,',') WITHIN GROUP(ORDER BY RECEIVE) AS RECEIVE,
		    TITLE,
		    CONTENT,
		    ENROLL_DATE,
		    STAR,
		    REFERENCE,
		    READ_YN
		FROM (
				SELECT 
					M.MAIL_NO
					, E.NICK SEND
					, EE.NICK RECEIVE
					, M.TITLE
					, M.CONTENT
					, M.ENROLL_DATE
					, R.STAR
					, EM.NICK REFERENCE
					, R.READ_YN
				FROM MAIL M
					INNER JOIN MAIL_RECEIVE R
					ON M.MAIL_NO = R.MAIL_NO
					INNER JOIN EMPLOYEE E
					ON M.SEND = E.EMP_NO
		            JOIN EMPLOYEE EE
		            ON R.RECEIVE = EE.EMP_NO
		            JOIN EMPLOYEE EM
		            ON R.REFERENCE = EM.EMP_NO
				WHERE R.STATUS=0
		        AND EM.EMP_NO = ${reference}
		        )     
		group by MAIL_NO, TITLE, CONTENT, ENROLL_DATE, STAR, 
		REFERENCE, READ_YN, SEND 
	</select>
	
	<select id="selectSendList" resultType="mv">
		SELECT 
		    MAIL_NO,
		    SEND,
		    LISTAGG(RECEIVE,',') WITHIN GROUP(ORDER BY RECEIVE) AS RECEIVE,
		    TITLE,
		    CONTENT,
		    ENROLL_DATE,
		    STAR,
		    LISTAGG(REFERENCE,',') WITHIN GROUP(ORDER BY REFERENCE) AS REFERENCE,
		    READ_YN
		FROM (
				SELECT 
					M.MAIL_NO
					, E.NICK SEND
					, EE.NICK RECEIVE
					, M.TITLE
					, M.CONTENT
					, M.ENROLL_DATE
					, R.STAR
					, R.REFERENCE
					, R.READ_YN
				FROM MAIL M
					INNER JOIN MAIL_RECEIVE R
					ON M.MAIL_NO = R.MAIL_NO
					INNER JOIN EMPLOYEE E
					ON M.SEND = E.EMP_NO
		            JOIN EMPLOYEE EE
		            ON R.RECEIVE = EE.EMP_NO
				WHERE R.STATUS=0
		        AND M.SEND=${send}
		        AND R.REFERENCE IS NULL
		        ) 
		GROUP BY MAIL_NO, TITLE, CONTENT, ENROLL_DATE, STAR, READ_YN, SEND 
	</select>
	
	<select id="selectSendOne" resultType="mv">
		SELECT
		    M.MAIL_NO
		    , E.NICK SEND
		    , LISTAGG(EE.NICK,',') WITHIN GROUP(ORDER BY R.RECEIVE) AS RECEIVE
		    , M.TITLE
		    , M.CONTENT
		FROM MAIL_RECEIVE R
		JOIN EMPLOYEE E
			ON E.EMP_NO = M.SEND
		JOIN EMPLOYEE EE
			ON EE.EMP_NO = R.RECEIVE
		JOIN MAIL M
			ON M.MAIL_NO = R.MAIL_NO
		WHERE R.STATUS = 0
			AND M.MAIL_NO = ${mailNo}
			AND M.SEND = ${send}
			AND R.REFERENCE IS NULL 
        group by M.MAIL_NO, E.NICK, M.TITLE, M.CONTENT
	</select>
	
	<select id="selectSendRef" resultType="String">
		SELECT LISTAGG(E.NICK,',') WITHIN GROUP(ORDER BY R.REFERENCE) AS REFERENCE
		FROM MAIL_RECEIVE R
		JOIN EMPLOYEE E
			ON E.EMP_NO = R.REFERENCE
		JOIN MAIL M
			ON M.MAIL_NO = R.MAIL_NO
		WHERE R.MAIL_NO = ${mailNo}
			AND M.SEND=${send}
			AND R.STATUS=0
	</select>
	
	<!-- 휴지통 -->
	<select id="selectStatusOne" resultType="mv">
		SELECT 
		    MAIL_NO,
		    SEND,
		    LISTAGG(RECEIVE,',') WITHIN GROUP(ORDER BY RECEIVE) AS RECEIVE,
		    TITLE,
		    CONTENT,
		    ENROLL_DATE,
		    STAR,
		    LISTAGG(REFERENCE,',') WITHIN GROUP(ORDER BY REFERENCE) AS REFERENCE,
		    READ_YN
		FROM (
				SELECT 
					M.MAIL_NO
					, E.NICK SEND
					, EE.NICK RECEIVE
					, M.TITLE
					, M.CONTENT
					, M.ENROLL_DATE
					, R.STAR
					, R.REFERENCE
					, R.READ_YN
				FROM MAIL M
					INNER JOIN MAIL_RECEIVE R
					ON M.MAIL_NO = R.MAIL_NO
					INNER JOIN EMPLOYEE E
					ON M.SEND = E.EMP_NO
		            JOIN EMPLOYEE EE
		            ON R.RECEIVE = EE.EMP_NO
				WHERE R.STATUS=1
		        AND R.RECEIVE=${receive}
		        ) 
		GROUP BY MAIL_NO, TITLE, CONTENT, ENROLL_DATE, STAR, READ_YN, SEND 
	</select>
	
	<select id="selectTrashOne" resultType="mv">
		SELECT
		    M.MAIL_NO
		    , E.NICK SEND
		    , EE.NICK RECEIVE
		    , M.TITLE
		    , M.CONTENT
		FROM MAIL_RECEIVE R
		JOIN MAIL M
			ON M.MAIL_NO = R.MAIL_NO
		JOIN EMPLOYEE E
			ON E.EMP_NO = M.SEND
		JOIN EMPLOYEE EE
			ON EE.EMP_NO = R.RECEIVE
		WHERE R.STATUS = 1
			AND M.MAIL_NO = ${mailNo}
			AND R.RECEIVE = ${receive}
	</select>
	
	<select id="selectTrashRef" resultType="String">
		SELECT LISTAGG(E.NICK,',') WITHIN GROUP(ORDER BY R.REFERENCE) AS REFERENCE
		FROM MAIL_RECEIVE R
		JOIN EMPLOYEE E
			ON E.EMP_NO = R.REFERENCE
		JOIN MAIL M
			ON M.MAIL_NO = R.MAIL_NO
		WHERE R.MAIL_NO = ${mailNo}
			AND R.RECEIVE=${receive}
			AND R.STATUS=1
	</select>
	
</mapper>
